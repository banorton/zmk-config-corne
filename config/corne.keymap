#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    //

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC    &kp Q                    &kp W       &kp E       &kp R        &kp T             &kp Y           &kp U        &kp I       &kp O       &kp P                            &kp BSPC
&kp LSHFT  &hm LA(LC(LG(LCTRL))) A  &hm LGUI S  &hm LALT D  &hm LCTRL F  &kp G             &kp H           &hm LCTRL J  &hm LALT K  &hm LGUI L  &hm LA(LC(LG(LCTRL))) SEMICOLON  &kp APOS
&kp LCTRL  &kp Z                    &kp X       &kp C       &kp V        &kp B             &kp N           &kp M        &kp COMMA   &kp PERIOD  &kp FSLH                         &kp LA(LC(LG(LCTRL)))
                                                &mo 4       &lt 1 ESC    &hm LGUI SPACE    &hm LALT ENTER  &lt 2 TAB    &trans
            >;
        };

        num {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6   &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6   &kp N7  &kp N8  &kp N9  &kp N0   &trans
&trans  &trans  &trans  &trans  &trans  &kp F11    &kp F12  &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans     &trans   &trans  &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans     &kp LBKT   &kp RBKT  &trans    &trans       &trans  &trans     &kp PIPE  &kp AMPS   &trans    &trans
&trans  &kp SQT    &kp DQT    &kp LPAR  &kp RPAR  &kp TILDE    &trans  &kp EQUAL  &kp PLUS  &kp MINUS  &kp EXCL  &trans
&trans  &kp UNDER  &kp GRAVE  &kp LBRC  &kp RBRC  &trans       &trans  &trans     &kp LT    &kp GT     &kp BSLH  &trans
                              &trans    &trans    &trans       &trans  &trans     &trans
            >;
        };

        nav {
            bindings = <
&trans  &msc SCRL_UP    &mkp RCLK       &mmv MOVE_UP     &mkp LCLK        &trans    &trans    &trans    &kp HOME  &kp END    &trans  &trans
&trans  &msc SCRL_DOWN  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN   &trans    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&trans  &trans          &trans          &msc SCRL_LEFT   &msc SCRL_RIGHT  &trans    &trans    &trans    &trans    &trans     &trans  &trans
                                        &trans           &trans           &trans    &trans    &trans    &trans
            >;
        };

        sys {
            bindings = <
&trans  &trans  &bt BT_PRV    &bt BT_NXT      &trans        &trans    &trans  &trans          &trans       &trans      &trans  &trans
&trans  &trans  &bt BT_SEL 2  &bt BT_SEL 1    &bt BT_SEL 0  &trans    &trans  &studio_unlock  &bootloader  &sys_reset  &trans  &trans
&trans  &trans  &trans        &bt BT_CLR_ALL  &bt BT_CLR    &trans    &trans  &trans          &trans       &trans      &trans  &trans
                              &trans          &trans        &trans    &trans  &trans          &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
