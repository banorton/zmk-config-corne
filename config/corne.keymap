#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        rsym {
            bindings = <&mo 2>;
            key-positions = <19 20>;
        };

        lsym {
            bindings = <&mo 2>;
            key-positions = <16 15>;
        };

        rnav {
            bindings = <&mo 3>;
            key-positions = <20 21>;
        };

        lnav {
            bindings = <&mo 3>;
            key-positions = <15 14>;
        };

        lesc {
            bindings = <&kp ESC>;
            key-positions = <16 14>;
        };

        ltab {
            bindings = <&kp TAB>;
            key-positions = <13 16>;
        };

        renter {
            bindings = <&kp ENTER>;
            key-positions = <19 21>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB    &kp Q                    &kp W       &kp E       &kp R        &kp T          &kp Y          &kp U        &kp I           &kp O            &kp P                       &mo 4
&kp ESC    &hm LSHFT A              &kp S       &kp D       &kp F        &kp G          &kp H          &kp J        &kp K           &kp L            &hm LSHIFT SEMICOLON        &kp APOS
&kp ENTER  &hm LS(LA(LG(LCTRL))) Z  &hm LGUI X  &hm LALT C  &hm LCTRL V  &kp B          &kp N          &hm LCTRL M  &hm LALT COMMA  &hm LGUI PERIOD  &hm LS(LA(LG(LCTRL))) FSLH  &kp EQUAL
                                                &trans      &mo 1        &lt 1 SPACE    &kp BACKSPACE  &mo 2        &trans
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans         &trans          &trans           &trans    &trans  &trans           &trans         &trans          &trans  &trans
&trans  &kp N1  &kp N2         &kp N3          &kp N4           &kp N5    &kp N6  &kp N7           &kp N8         &kp N9          &kp N0  &trans
&trans  &trans  &hm LGUI FSLH  &hm LALT ASTRK  &hm LCTRL EQUAL  &trans    &trans  &hm LCTRL EQUAL  &hm LALT PLUS  &hm LGUI MINUS  &trans  &trans
                               &trans          &trans           &trans    &trans  &trans           &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans     &kp LBKT        &kp RBKT       &kp BACKSLASH   &trans      &trans  &trans           &kp PIPE     &kp AMPS     &trans    &trans
&trans  &kp LT     &kp GT          &kp LPAR       &kp RPAR        &kp AMPS    &trans  &kp EQUAL        &kp PLUS     &kp MINUS    &kp APOS  &trans
&trans  &kp TILDE  &hm LGUI UNDER  &hm LALT LBRC  &hm LCTRL RBRC  &kp PIPE    &trans  &hm LCTRL GRAVE  &hm LALT LT  &hm LGUI GT  &kp EXCL  &trans
                                   &trans         &trans          &trans      &trans  &trans           &trans
            >;
        };

        nav {
            bindings = <
&trans  &msc SCRL_UP    &mkp RCLK       &mmv MOVE_UP    &mkp LCLK        &msc SCRL_RIGHT    &trans    &trans    &kp HOME  &kp END    &trans  &trans
&trans  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_LEFT     &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&trans  &trans          &trans          &trans          &trans           &trans             &trans    &trans    &trans    &trans     &trans  &trans
                                        &trans          &trans           &trans             &trans    &trans    &trans
            >;
        };

        sys {
            bindings = <
&trans  &trans   &bt BT_PRV    &bt BT_NXT    &trans        &trans    &trans  &trans          &trans       &trans      &trans   &trans
&trans  &kp F1   &kp F2        &kp F3        &kp F4        &kp F5    &kp F6  &kp F7          &kp F8       &kp F9      &kp F10  &trans
&trans  &kp F11  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans    &trans  &studio_unlock  &bootloader  &sys_reset  &kp F12  &trans
                               &trans        &trans        &trans    &trans  &trans          &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
